const POLYMORPHS_CONTRACT_ADDRESS = "0x0650E5F57F42834896fB288923bdF43Fa68F3c56";
const UNISWAP_V3_ROUTER = "0xE592427A0AEce92De3Edee1F18E0157C05861564";
const LINK_ADDRESS = "0x01BE23585060835E02B77ef475b0Cc51aA1e0709";
const WETH_ADDRESS = "0xc778417e063141139fce010982780140aa0cd5ab";
const VRF_COORDINATOR_ADDRESS = "0xb3dCcb4Cf7a26f6cf6B120Cf5A73875B7BBc655B";
const DAO_ADDRESS = "0x5012A9a26866Bd7897a71Dd4fb7a65e6FFDD18f2"; // TODO:: Put actual DAO address
const WAGER = "100000000000000000"; // 0.1
const DAO_FEE_BPS = 1000;
const OPERATIONAL_FEE_BPS = 1000;
const RNG_CHAINLINK_COST = "100000000000000000";
const START_ROUND_INCETIVE = "5000000000000000"; // 0,005 ETH
const END_ROUND_INCETIVE = "10000000000000000"; // 0.01

const ADDRESSES = [
  POLYMORPHS_CONTRACT_ADDRESS,
  UNISWAP_V3_ROUTER,
  LINK_ADDRESS,
  WETH_ADDRESS,
  VRF_COORDINATOR_ADDRESS
];

const FEES = [
  WAGER,
  DAO_FEE_BPS,
  OPERATIONAL_FEE_BPS,
  RNG_CHAINLINK_COST,
  START_ROUND_INCETIVE,
  END_ROUND_INCETIVE
];

module.exports = [
  ADDRESSES,
  FEES,
  DAO_ADDRESS,
  ];

//   Command to verify on rinkeby
//   npx hardhat verify --network rinkeby  --constructor-args arguments.js 0x6B7660E8e289D44a785627D23F6e8C9F4BD45f8b